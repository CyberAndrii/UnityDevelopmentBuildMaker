name: Build and publish

on:
  push:
  pull_request:
  release:
    types: [published]

env:
  APP_NAME: UnityDevelopmentBuildMaker
  OUTPUT_DIR: ./output
  OUTPUT_ZIP: ../output.zip

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [Release]
        runtime: ['win-x64', 'win-x86']

    steps:
    - uses: actions/checkout@v2

    - name: Setup dotnet
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'
        include-prerelease: true

    - name: dotnet publish
      run: dotnet publish -c ${{ matrix.configuration }} -r ${{ matrix.runtime }} -o ${{ env.OUTPUT_DIR }} --self-contained

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.APP_NAME }}-${{ matrix.runtime }}-${{ matrix.configuration }}
        path: ${{ env.OUTPUT_DIR }}

    - name: Zip
      if: github.event_name == 'release' && matrix.configuration == 'Release'
      run: zip -qq -r ${{ env.OUTPUT_ZIP }} *
      working-directory: ${{ env.OUTPUT_DIR }}

    - name: Get release
      if: github.event_name == 'release' && matrix.configuration == 'Release'
      id: get-release
      uses: bruceadams/get-release@v1.2.3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload release
      if: github.event_name == 'release' && matrix.configuration == 'Release'
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.get-release.outputs.upload_url }}
        asset_path: ${{ env.OUTPUT_DIR }}/${{ env.OUTPUT_ZIP }}
        asset_name: ${{ env.APP_NAME }}-${{ matrix.runtime }}.zip
        asset_content_type: application/zip
